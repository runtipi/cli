name: Release CLI

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        type: string
        description: "The version of the CLI to build (e.g. v1.6.0-beta.1)"
      distinct_id:
        type: string
        description: "Distinct ID"
        required: false

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: echo distinct ID ${{ github.event.inputs.distinct_id }}
        run: echo ${{ github.event.inputs.distinct_id }}

  create-tag:
    runs-on: ubuntu-latest
    needs: [test]
    outputs:
      tagname: ${{ inputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: rickstaa/action-create-tag@v1
        id: create-tag
        with:
          tag: ${{ inputs.version }}

  build:
    needs: [create-tag]
    name: Release - ${{ matrix.platform.release_for }}
    strategy:
      matrix:
        platform:
          - release_for: linux-aarch64
            os: ubuntu-20.04
            target: aarch64-unknown-linux-gnu
            bin: runtipi-cli
            name: runtipi-cli-linux-aarch64
            command: build

          - release_for: linux-x86_64
            os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            bin: runtipi-cli
            name: runtipi-cli-linux-x86_64
            command: build

          # - release_for: macOS-aarch64
          #   os: macOS-latest
          #   target: aarch64-apple-darwin
          #   bin: runtipi-cli
          #   name: runtipi-cli-Darwin-aarch64
          #   command: build

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set version in src/assets/VERSION
        run: |
          echo "${{ needs.create-tag.outputs.tagname }}" > src/assets/VERSION

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: ${{ matrix.platform.command }}
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          strip: true

      - name: Upload CLI
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.name }}
          path: target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}

  release:
    runs-on: ubuntu-latest
    needs: [build, create-tag]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: List artifacts
        run: tree .

      - name: Move artifacts
        run: for dir in runtipi-cli-linux-*; do mv "$dir/runtipi-cli" "${dir}.cli" && rm -rf "$dir" && mv "${dir}.cli" "$dir"; done

      - name: Compress artifacts
        run: for file in runtipi-cli-linux-*; do tar -czvf "$file.tar.gz" "$file" && rm -rf "$file"; done

      - name: List artifacts
        run: tree .

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: |
            **${{ needs.create-tag.outputs.tagname }}**
          tag_name: ${{ needs.create-tag.outputs.tagname }}
          name: ${{ needs.create-tag.outputs.tagname }}
          draft: false
          prerelease: true
          files: runtipi-cli-*

  teardown:
    runs-on: ubuntu-latest
    if: failure()
    needs: [build, release]
    steps:
      - name: Delete tag
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = '${{ needs.create-tag.outputs.tagname }}';

            github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `tags/${tag}`
            });
